// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: helath/health.proto

package healthAnalytics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonitoringRealTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message      string          `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Lifestyle    *Lifestyles     `protobuf:"bytes,2,opt,name=lifestyle,proto3" json:"lifestyle,omitempty"`
	MedRecords   *MedicalRecords `protobuf:"bytes,3,opt,name=medRecords,proto3" json:"medRecords,omitempty"`
	WearableData *WearableDates  `protobuf:"bytes,4,opt,name=wearableData,proto3" json:"wearableData,omitempty"`
}

func (x *MonitoringRealTime) Reset() {
	*x = MonitoringRealTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitoringRealTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringRealTime) ProtoMessage() {}

func (x *MonitoringRealTime) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringRealTime.ProtoReflect.Descriptor instead.
func (*MonitoringRealTime) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{0}
}

func (x *MonitoringRealTime) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MonitoringRealTime) GetLifestyle() *Lifestyles {
	if x != nil {
		return x.Lifestyle
	}
	return nil
}

func (x *MonitoringRealTime) GetMedRecords() *MedicalRecords {
	if x != nil {
		return x.MedRecords
	}
	return nil
}

func (x *MonitoringRealTime) GetWearableData() *WearableDates {
	if x != nil {
		return x.WearableData
	}
	return nil
}

type Monitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message      string            `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Lifestyle    []*Lifestyles     `protobuf:"bytes,2,rep,name=lifestyle,proto3" json:"lifestyle,omitempty"`
	MedRecords   []*MedicalRecords `protobuf:"bytes,3,rep,name=medRecords,proto3" json:"medRecords,omitempty"`
	WearableData []*WearableDates  `protobuf:"bytes,4,rep,name=wearableData,proto3" json:"wearableData,omitempty"`
}

func (x *Monitoring) Reset() {
	*x = Monitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitoring) ProtoMessage() {}

func (x *Monitoring) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitoring.ProtoReflect.Descriptor instead.
func (*Monitoring) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{1}
}

func (x *Monitoring) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Monitoring) GetLifestyle() []*Lifestyles {
	if x != nil {
		return x.Lifestyle
	}
	return nil
}

func (x *Monitoring) GetMedRecords() []*MedicalRecords {
	if x != nil {
		return x.MedRecords
	}
	return nil
}

func (x *Monitoring) GetWearableData() []*WearableDates {
	if x != nil {
		return x.WearableData
	}
	return nil
}

type MedicalRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	RecordType  string   `protobuf:"bytes,2,opt,name=recordType,proto3" json:"recordType,omitempty"`
	RecordDate  string   `protobuf:"bytes,3,opt,name=recordDate,proto3" json:"recordDate,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	DoctorId    string   `protobuf:"bytes,5,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	Attachments []string `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *MedicalRecords) Reset() {
	*x = MedicalRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedicalRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicalRecords) ProtoMessage() {}

func (x *MedicalRecords) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicalRecords.ProtoReflect.Descriptor instead.
func (*MedicalRecords) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{2}
}

func (x *MedicalRecords) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MedicalRecords) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *MedicalRecords) GetRecordDate() string {
	if x != nil {
		return x.RecordDate
	}
	return ""
}

func (x *MedicalRecords) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MedicalRecords) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *MedicalRecords) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type Lifestyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DataType     string `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DataValue    string `protobuf:"bytes,3,opt,name=dataValue,proto3" json:"dataValue,omitempty"`
	RecordedData string `protobuf:"bytes,4,opt,name=recordedData,proto3" json:"recordedData,omitempty"`
}

func (x *Lifestyles) Reset() {
	*x = Lifestyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lifestyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lifestyles) ProtoMessage() {}

func (x *Lifestyles) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lifestyles.ProtoReflect.Descriptor instead.
func (*Lifestyles) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{3}
}

func (x *Lifestyles) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Lifestyles) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Lifestyles) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *Lifestyles) GetRecordedData() string {
	if x != nil {
		return x.RecordedData
	}
	return ""
}

type WearableDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DeviceType   string `protobuf:"bytes,2,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	DataType     string `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DataValue    string `protobuf:"bytes,4,opt,name=dataValue,proto3" json:"dataValue,omitempty"`
	RecordedTime string `protobuf:"bytes,5,opt,name=recordedTime,proto3" json:"recordedTime,omitempty"`
}

func (x *WearableDates) Reset() {
	*x = WearableDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WearableDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WearableDates) ProtoMessage() {}

func (x *WearableDates) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WearableDates.ProtoReflect.Descriptor instead.
func (*WearableDates) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{4}
}

func (x *WearableDates) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WearableDates) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *WearableDates) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *WearableDates) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *WearableDates) GetRecordedTime() string {
	if x != nil {
		return x.RecordedTime
	}
	return ""
}

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{5}
}

// ------------ Health Recommendations -----------------
type UserHealthRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthRecommends []*HealthRecommendationReq `protobuf:"bytes,1,rep,name=healthRecommends,proto3" json:"healthRecommends,omitempty"`
}

func (x *UserHealthRecommendation) Reset() {
	*x = UserHealthRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserHealthRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserHealthRecommendation) ProtoMessage() {}

func (x *UserHealthRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserHealthRecommendation.ProtoReflect.Descriptor instead.
func (*UserHealthRecommendation) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{6}
}

func (x *UserHealthRecommendation) GetHealthRecommends() []*HealthRecommendationReq {
	if x != nil {
		return x.HealthRecommends
	}
	return nil
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{7}
}

func (x *UserID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type HealthRecommendationID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HealthRecommendationID) Reset() {
	*x = HealthRecommendationID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRecommendationID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRecommendationID) ProtoMessage() {}

func (x *HealthRecommendationID) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRecommendationID.ProtoReflect.Descriptor instead.
func (*HealthRecommendationID) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{8}
}

func (x *HealthRecommendationID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type HealthRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId             string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	RecommendationType string `protobuf:"bytes,3,opt,name=recommendationType,proto3" json:"recommendationType,omitempty"`
	Description        string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Priority           int64  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	CreatedAt          string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          string `protobuf:"bytes,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *HealthRecommendation) Reset() {
	*x = HealthRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRecommendation) ProtoMessage() {}

func (x *HealthRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRecommendation.ProtoReflect.Descriptor instead.
func (*HealthRecommendation) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{9}
}

func (x *HealthRecommendation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HealthRecommendation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HealthRecommendation) GetRecommendationType() string {
	if x != nil {
		return x.RecommendationType
	}
	return ""
}

func (x *HealthRecommendation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HealthRecommendation) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *HealthRecommendation) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *HealthRecommendation) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type HealthRecommendationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	RecommendationType string `protobuf:"bytes,2,opt,name=recommendationType,proto3" json:"recommendationType,omitempty"`
	Description        string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Priority           int64  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *HealthRecommendationReq) Reset() {
	*x = HealthRecommendationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helath_health_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRecommendationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRecommendationReq) ProtoMessage() {}

func (x *HealthRecommendationReq) ProtoReflect() protoreflect.Message {
	mi := &file_helath_health_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRecommendationReq.ProtoReflect.Descriptor instead.
func (*HealthRecommendationReq) Descriptor() ([]byte, []int) {
	return file_helath_health_proto_rawDescGZIP(), []int{10}
}

func (x *HealthRecommendationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HealthRecommendationReq) GetRecommendationType() string {
	if x != nil {
		return x.RecommendationType
	}
	return ""
}

func (x *HealthRecommendationReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HealthRecommendationReq) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

var File_helath_health_proto protoreflect.FileDescriptor

var file_helath_health_proto_rawDesc = []byte{
	0x0a, 0x13, 0x68, 0x65, 0x6c, 0x61, 0x74, 0x68, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0xd3, 0x01,
	0x0a, 0x12, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x0a, 0x6d, 0x65,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x77, 0x65, 0x61, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0c, 0x77, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xcb, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x09,
	0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x73, 0x52, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x36,
	0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x0a, 0x6d, 0x65, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x77, 0x65, 0x61, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x0c, 0x77, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xc8, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x82, 0x01, 0x0a,
	0x0a, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x06, 0x0a, 0x04, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x67, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a,
	0x10, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x10, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x18, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe8,
	0x01, 0x0a, 0x14, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x32, 0xe9, 0x03, 0x0a, 0x1c,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x1d,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x1a, 0x1c, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x20, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x0c, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x1a, 0x1a, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0c, 0x2e, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x12, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0c, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x1a, 0x12, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x1b, 0x5a, 0x19, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_helath_health_proto_rawDescOnce sync.Once
	file_helath_health_proto_rawDescData = file_helath_health_proto_rawDesc
)

func file_helath_health_proto_rawDescGZIP() []byte {
	file_helath_health_proto_rawDescOnce.Do(func() {
		file_helath_health_proto_rawDescData = protoimpl.X.CompressGZIP(file_helath_health_proto_rawDescData)
	})
	return file_helath_health_proto_rawDescData
}

var file_helath_health_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_helath_health_proto_goTypes = []any{
	(*MonitoringRealTime)(nil),       // 0: health.MonitoringRealTime
	(*Monitoring)(nil),               // 1: health.Monitoring
	(*MedicalRecords)(nil),           // 2: health.MedicalRecords
	(*Lifestyles)(nil),               // 3: health.Lifestyles
	(*WearableDates)(nil),            // 4: health.WearableDates
	(*Void)(nil),                     // 5: health.Void
	(*UserHealthRecommendation)(nil), // 6: health.UserHealthRecommendation
	(*UserID)(nil),                   // 7: health.UserID
	(*HealthRecommendationID)(nil),   // 8: health.HealthRecommendationID
	(*HealthRecommendation)(nil),     // 9: health.HealthRecommendation
	(*HealthRecommendationReq)(nil),  // 10: health.HealthRecommendationReq
}
var file_helath_health_proto_depIdxs = []int32{
	3,  // 0: health.MonitoringRealTime.lifestyle:type_name -> health.Lifestyles
	2,  // 1: health.MonitoringRealTime.medRecords:type_name -> health.MedicalRecords
	4,  // 2: health.MonitoringRealTime.wearableData:type_name -> health.WearableDates
	3,  // 3: health.Monitoring.lifestyle:type_name -> health.Lifestyles
	2,  // 4: health.Monitoring.medRecords:type_name -> health.MedicalRecords
	4,  // 5: health.Monitoring.wearableData:type_name -> health.WearableDates
	10, // 6: health.UserHealthRecommendation.healthRecommends:type_name -> health.HealthRecommendationReq
	10, // 7: health.HealthRecommendationsService.GenerateHealthRecommendations:input_type -> health.HealthRecommendationReq
	8,  // 8: health.HealthRecommendationsService.GetHealthRecommendations:input_type -> health.HealthRecommendationID
	7,  // 9: health.HealthRecommendationsService.GetAllHealthRecommendations:input_type -> health.UserID
	5,  // 10: health.HealthRecommendationsService.GetRealtimeHealthMonitoring:input_type -> health.Void
	5,  // 11: health.HealthRecommendationsService.GetDailyHealthSummary:input_type -> health.Void
	5,  // 12: health.HealthRecommendationsService.GetWeeklyHealthSummary:input_type -> health.Void
	9,  // 13: health.HealthRecommendationsService.GenerateHealthRecommendations:output_type -> health.HealthRecommendation
	9,  // 14: health.HealthRecommendationsService.GetHealthRecommendations:output_type -> health.HealthRecommendation
	6,  // 15: health.HealthRecommendationsService.GetAllHealthRecommendations:output_type -> health.UserHealthRecommendation
	0,  // 16: health.HealthRecommendationsService.GetRealtimeHealthMonitoring:output_type -> health.MonitoringRealTime
	1,  // 17: health.HealthRecommendationsService.GetDailyHealthSummary:output_type -> health.Monitoring
	1,  // 18: health.HealthRecommendationsService.GetWeeklyHealthSummary:output_type -> health.Monitoring
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_helath_health_proto_init() }
func file_helath_health_proto_init() {
	if File_helath_health_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_helath_health_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MonitoringRealTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Monitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MedicalRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Lifestyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*WearableDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UserHealthRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*HealthRecommendationID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*HealthRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helath_health_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*HealthRecommendationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_helath_health_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helath_health_proto_goTypes,
		DependencyIndexes: file_helath_health_proto_depIdxs,
		MessageInfos:      file_helath_health_proto_msgTypes,
	}.Build()
	File_helath_health_proto = out.File
	file_helath_health_proto_rawDesc = nil
	file_helath_health_proto_goTypes = nil
	file_helath_health_proto_depIdxs = nil
}
